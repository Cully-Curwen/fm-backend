type Query {
  # administeredMarkets(): [Market!]
  # administeredTraders(): [TraderCard!]  

  # marketList(): [Market!]
  # market(): Market
  trader: TraderCard
}

type Mutation {
  customerRegister(email: String!, firstName: String!, lastName: String!, password: String!): CustomerAuthPayload
  customerLogin(email: String!, password: String!): CustomerAuthPayload
  customerUpdate(email: String, firstName: String, lastName: String, password: String!, newPassword: String): Customer

  marketAdminRegister(email: String!, firstName: String!, lastName: String!, password: String!): MarketAdminAuthPayload
  marketAdminLogin(email: String!, password: String!): MarketAdminAuthPayload
  marketAdminUpdate(email: String, firstName: String, lastName: String, password: String!, newPassword: String): MarketAdmin

  traderAdminRegister(email: String!, firstName: String!, lastName: String!, password: String!): TraderAdminAuthPayload
  traderAdminLogin(email: String!, password: String!): TraderAdminAuthPayload
  traderAdminUpdate(email: String, firstName: String, lastName: String, password: String!, newPassword: String): TraderAdmin

  # marketCreate(): Market
  # marketUpdate(): Market

  # addTraderToMarket(): Market
  # removeTraderFromMarket(): Market

  # traderCardCreate(): TraderCard
  # traderCardUpdate(): TraderCard

  # inventoryItemCreate(): TraderCard
  # inventroyItemUpdate(): TraderCard
  # inventoryItemRemove(): TraderCard

  # cartAddItem(): MarketCart
  # cartRemoveItem(): MarketCart

  # checkout(): Order
}

type CustomerAuthPayload {
  token: String!
  customer: Customer!
}

type MarketAdminAuthPayload {
  token: String!
  marketAdmin: MarketAdmin!
  markets: [Market!]!
}

type TraderAdminAuthPayload {
  token: String!
  traderAdmin: TraderAdmin!
  traderCards: [TraderCard!]!
}

type MarketAdmin {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
}

type TraderAdmin {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
}

type Customer {
  id: ID!
  email: String!
  firstName: String!
  lastName: String!
  shoppingCarts: [MarketCart!]!
}

type MarketCart {
  market_id: String!
  items: [ItemsCart!]!
}

type ItemsCart {
  trader_id: String!
  market_id: String!
  name: String!
  description: String!
  quantity: Int!
  price: Int!
}

type Market {
  id: ID!
  admins: [String!]!
  name: String!
  blurb: String!
  address: String
  geoLocation: GeoPoint!
  directions: String
  imgUrl: String
  openHours: OpenHours!
  traders: [TraderCard!]!
}

type GeoPoint {
  type: String!
  coordinates: [Float!]!
}

type OpenHours {
  openTime: String!
  closeTime: String!
  tradingDay: String!
}

type TraderCard {
  id: ID!
  admins: [String!]!
  name: String!
  blurb: String!
  imgUrl: String
  links: UrlLinks
  produceTags: [String!]!
  inventory: [ItemsInventory!]!
}

type UrlLinks {
  website: String
  email: String
  facebook: String
  twitter: String
  Instagram: String
}

type ItemsInventory {
  id: ID!
  trader_id: String!
  market_id: String!
  name: String!
  description: String!
  stock: Int!
  price: Int!
}

type Order {
  id: ID!
  customer_id: String!
  market_id: String!
  orderCode: String!
  orderItems: [ItemsOrder!]!
  totalPrice: Int!
  date: String!
}

type ItemsOrder {
  trader_id: String!
  market_id: String!
  name: String!
  description: String!
  quantity: Int!
  price: Int!
}